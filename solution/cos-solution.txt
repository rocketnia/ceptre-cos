Final state:
{qui, (stage main)}

Trace: 
let [x3, x2] = elim_cons root mc2 (bi mc2 (bi md2 (pa r) (pa u)) (pa t)) (bi mc2 (bi md2 (na r) (na t)) (na u)) [x1, []];
let [x4] = switch (path0 mc2 root) (pa r) (pa u) (pa t) [x2, []];
let [x5] = commute_md (path0 mc2 root) (bi mc2 (pa r) (pa t)) (pa u) [x4, []];
let [x7, x6] = elim_cons (path1 mc2 root) mc2 (bi md2 (na r) (na t)) (na u) [x3, []];
let [x8] = commute_md (path0 mc2 (path1 mc2 root)) (na r) (na t) [x6, []];
let [x9] = intr_cons mc2 (path1 mc2 root) (bi md2 (na t) (na r)) (na u) [x8, [x7, []]];
let [x10] = intr_cons mc2 root (bi md2 (pa u) (bi mc2 (pa r) (pa t))) (bi mc2 (bi md2 (na t) (na r)) (na u)) [x5, [x9, []]];
let [x11] = commute_mc root (bi md2 (pa u) (bi mc2 (pa r) (pa t))) (bi mc2 (bi md2 (na t) (na r)) (na u)) [x10, []];
let [x12] = assocr_mc root (bi md2 (na t) (na r)) (na u) (bi md2 (pa u) (bi mc2 (pa r) (pa t))) [x11, []];
let [x14, x13] = elim_cons root mc2 (bi md2 (na t) (na r)) (bi mc2 (na u) (bi md2 (pa u) (bi mc2 (pa r) (pa t)))) [x12, []];
let [x15] = commute_mc (path1 mc2 root) (na u) (bi md2 (pa u) (bi mc2 (pa r) (pa t))) [x14, []];
let [x16] = switch (path1 mc2 root) (pa u) (bi mc2 (pa r) (pa t)) (na u) [x15, []];
let [x18, x17] = elim_cons (path1 mc2 root) md2 (bi mc2 (pa u) (na u)) (bi mc2 (pa r) (pa t)) [x16, []];
let [x19] = cut (path0 md2 (path1 mc2 root)) u [x17, []];
let [x20] = intr_cons md2 (path1 mc2 root) (pa md0) (bi mc2 (pa r) (pa t)) [x19, [x18, []]];
let [x21] = elim_unit_md (path1 mc2 root) (bi mc2 (pa r) (pa t)) [x20, []];
let [x22] = intr_cons mc2 root (bi md2 (na t) (na r)) (bi mc2 (pa r) (pa t)) [x13, [x21, []]];
let [x23] = commute_mc root (bi md2 (na t) (na r)) (bi mc2 (pa r) (pa t)) [x22, []];
let [x24] = assocr_mc root (pa r) (pa t) (bi md2 (na t) (na r)) [x23, []];
let [x26, x25] = elim_cons root mc2 (pa r) (bi mc2 (pa t) (bi md2 (na t) (na r))) [x24, []];
let [x27] = commute_mc (path1 mc2 root) (pa t) (bi md2 (na t) (na r)) [x26, []];
let [x28] = switch (path1 mc2 root) (na t) (na r) (pa t) [x27, []];
let [x30, x29] = elim_cons (path1 mc2 root) md2 (bi mc2 (na t) (pa t)) (na r) [x28, []];
let [x31] = commute_mc (path0 md2 (path1 mc2 root)) (na t) (pa t) [x29, []];
let [x32] = cut (path0 md2 (path1 mc2 root)) t [x31, []];
let [x33] = intr_cons md2 (path1 mc2 root) (pa md0) (na r) [x32, [x30, []]];
let [x34] = elim_unit_md (path1 mc2 root) (na r) [x33, []];
let [x35] = intr_cons mc2 root (pa r) (na r) [x25, [x34, []]];
let [x36] = cut root r [x35, []];
let [] = win  [x36, []];
